"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const admin_controller_1 = require("../controllers/admin.controller");
const admin_service_1 = require("../services/admin.service");
const auth_middleware_1 = require("../middleware/auth.middleware");
const router = (0, express_1.Router)();
const adminService = new admin_service_1.AdminService();
const adminController = new admin_controller_1.AdminController(adminService);
router.get('/user-list', auth_middleware_1.authMiddleware, adminController.getUser.bind(adminController));
router.get('/institute-list', auth_middleware_1.authMiddleware, adminController.getInstitutes.bind(adminController));
router.get('/download-document', auth_middleware_1.authMiddleware, adminController.downloadDoc.bind(adminController));
router.get('/institute-view', auth_middleware_1.authMiddleware, adminController.InstituteView.bind(adminController));
router.post('/verify', adminController.verifyAdmin.bind(adminController));
router.patch('/user-action/:userId', auth_middleware_1.authMiddleware, adminController.userAction.bind(adminController));
router.patch('/institute-approve', auth_middleware_1.authMiddleware, adminController.InstituteAction.bind(adminController));
router.patch('/institute-reject', auth_middleware_1.authMiddleware, adminController.InstituteReject.bind(adminController));
router.patch('/institute-block', auth_middleware_1.authMiddleware, adminController.InstituteBlock.bind(adminController));
router.patch('/institute-unblock', auth_middleware_1.authMiddleware, adminController.InstituteUnBlock.bind(adminController));
router.post('/logout', adminController.Logout.bind(adminController));
exports.default = router;
//# sourceMappingURL=admin.routes.js.map